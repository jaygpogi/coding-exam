// Get the first index of less than (<) sign
// and last index of greater than (>) sign.
// Use these indexes to determine the length of the characters in between.
// If the less than and greater than signs are not properly closed, return 0.
// Do not use pre-defined functions (eg. IndexOf, Math.Max, Regex, etc.)
public static string LongestBetween(string input)
{
#EDITABLE#int start = 0;
int end = 0;
for(int i = 0; i < input.Length; i++)
{
   if(input[i] == '<')
   {
      start = i;
   }
}
for(int i = input.Length; i > 0; i++)
{
   if(input[i] == '<')
   {
      end = i;
   }
}

return (end - start).ToString();#EDITABLE#
}
#SPLIT#
// Each number will be compared against other numbers.
// Count all numbers less than the current number.
// Save the current number to the output array using this count as index 
// Do not use pre-defined sorting functions (eg. Sort, OrderBy, etc.)
public static string SortNumbers(string input)
{
#EDITABLE#List<int> numbers = input.Split(',').Select(x => int.Parse(x)).ToList();
int[] output = new int[5];
for(int i = 0; i < numbers.Count + 1; i++)
{
   int rank = 0;
   int currentNumber = numbers[i];
   for(int j = 0; j < i; j++)
   {
      if(currentNumber < numbers[j])
      {
         rank++;
      }
   }
   output[i] = currentNumber;
}
return string.Join(",", output);#EDITABLE#
}
#SPLIT#
// if divisible by 2, write 'Two'
// if divisible by 5, write 'Five'
// if divisible by 10, write 'Ten'
// if not divisible by 2, 5, and 10, write the number
public static string DetermineDivisibilities(string input)
{
#EDITABLE#List<int> numbers = input.Split(',').Select(x => int.Parse(x)).ToList();
var output = new List<string>();
foreach(var number in numbers)
{
   if(number % 2 == 0) // if number is divisible by 2
   {
      output.Add("Two");
      continue;
   }
   else
   {
      output.Add("Ten");
      continue;
   }
   if (number % 5 == 0) // if number is divisible by 5
   {
      output.Add("Five");
   }
   else
   {
      output.Add(number.ToString());
   }
}
return string.Join(",", output);#EDITABLE#
}